#!/usr/bin/env python
# coding: utf-8

# In[27]:


import random
import os
import json
import re  
import pandas as pd 
import numpy as np
from sklearn.ensemble import RandomForestClassifier
import pickle
import csv

def fun1(dirName,ap):
    list9 = ['no_of_dns','sensapi.dll','cfgmgr32.dll','msftedit.dll','msls31.dll','dwmapi.dll','odbcint.dll','cryptsp.dll','mpr.dll','crypt32.dll','advapi32.dll','ole32.dll','ws2_32.dll','system.dll','mlang.dll','feclient.dll','setupapi.dll','iphlpapi.dll','mswsock.dll','avicap32.dll','api-ms-win-service-winsvc-l1-1-0.dll','rpcrt4.dll','ieui.dll','urlmon.dll','winmm.dll','rpcrtremote.dll','apphelp.dll','dnsapi.dll','kernel32.dll','oleaut32.dll','netapi32.dll','rstrtmgr.dll','ntdll.dll','findprocdll.dll','dhcpcsvc6.dll','cryptbase.dll','version.dll','comdlg32.dll','rtutils.dll','bcryptprimitives.dll','napinsp.dll','shell32.dll','uxtheme.dll','odbc32.dll','oleacc.dll','rasman.dll','comctl32.dll','winrnr.dll','riched20.dll','nlaapi.dll','accesscontrol.dll','api-ms-win-core-localregistry-l1-1-0.dll','rasapi32.dll','user32.dll','api-ms-win-security-sddl-l1-1-0.dll','profapi.dll','api-ms-win-service-management-l1-1-0.dll','gdi32.dll','msvcrt.dll','shlwapi.dll','msimg32.dll','ieframe.dll','psapi.dll','propsys.dll','sspicli.dll','msvbvm60.dll','credssp.dll','ntdll','olepro32.dll','inetmib1.dll','secur32.dll','wsock32.dll','netutils.dll','clbcatq.dll','msvcp60.dll','msi.dll','dhcpcsvc.dll','userenv.dll','dbghelp.dll','gdiplus.dll','xmllite.dll','pnrpnsp.dll','winhttp.dll','ntmarta.dll','cryptnet.dll','rasadhlp.dll','icmp.dll','imm32.dll','ehstorshell.dll','vb6chs.dll','wintrust.dll','api-ms-win-security-lsalookup-l1-1-0.dll','riched32.dll','wininet.dll','windowscodecs.dll','shfolder.dll','comres.dll','sxs.dll','snmpapi.dll','cscui.dll','ntshrui.dll','NtOpenSection','GetVolumePathNameW','GetForegroundWindow','NtSetValueKey','getaddrinfo','MessageBoxTimeoutW','SetFileTime','GetFileVersionInfoSizeW','MessageBoxTimeoutA','GetFileAttributesW','GetVolumePathNamesForVolumeNameW','RegEnumKeyExA','RegOpenKeyExW','NtDelayExecution','SetErrorMode','RegOpenKeyExA','GetCursorPos','FindResourceExA','SetFilePointerEx','GetUserNameW','RegEnumValueW','GetUserNameA','FindResourceExW','GetTimeZoneInformation','NtCreateFile','GetSystemTimeAsFileTime','GlobalMemoryStatusEx','CoInitializeEx','LoadResource','CoInitializeSecurity','SetFileAttributesW','NtQueryInformationFile','RegSetValueExW','RegCreateKeyExW','DeviceIoControl','NtQueryKey','OpenServiceA','RegQueryValueExA','EnumWindows','OpenServiceW','GetAdaptersAddresses','IsDebuggerPresent','NtQueryValueKey','RegCreateKeyExA','RegQueryValueExW','CreateActCtxW','NtDeviceIoControlFile','NtReadFile','NtWriteFile','LdrGetDllHandle','NtQuerySystemInformation','NtEnumerateValueKey','LoadStringA','CreateThread','GetSystemDirectoryW','SetUnhandledExceptionFilter','GetVolumeNameForVolumeMountPointW','GetSystemDirectoryA','NtProtectVirtualMemory','SHGetFolderPathW','RegDeleteValueW','GlobalMemoryStatus','SearchPathW','WriteConsoleA','LoadStringW','LdrGetProcedureAddress','NtOpenThread','RegSetValueExA','GetDiskFreeSpaceExW','NtOpenDirectoryObject','SetEndOfFile','LdrLoadDll','UuidCreate','WriteConsoleW','CreateToolhelp32Snapshot','CoUninitialize','RegCloseKey','LdrUnloadDll','NtSetInformationFile','WSAStartup','NtTerminateProcess','SendNotifyMessageW','GetSystemMetrics','NtCreateThreadEx','GetFileSize','NtDuplicateObject','NtAllocateVirtualMemory','ReadProcessMemory','CreateDirectoryW','DeleteFileW','NtResumeThread','GetFileSizeEx','CoCreateInstance','RegEnumKeyExW','CryptAcquireContextW','GetComputerNameA','FindFirstFileExW','GetFileInformationByHandleEx','GetTempPathW','SetWindowsHookExA','NtOpenMutant','InternetOpenA','SetWindowsHookExW','CopyFileA','GetFileType','CreateProcessInternalW','GetNativeSystemInfo','NtQueryFullAttributesFile','DrawTextExW','GetSystemInfo','FindWindowW','GetSystemWindowsDirectoryW','NtClose','NtOpenProcess','NtCreateSection','NtFreeVirtualMemory','OpenSCManagerA','SizeofResource','UnhookWindowsHookEx','RegEnumKeyW','NtMapViewOfSection','GetKeyState','OleInitialize','NtOpenFile','RegQueryInfoKeyW','SetFilePointer','NtUnmapViewOfSection','NtQueryDirectoryFile','gethostbyname','__exception__','NtQueryAttributesFile','NtCreateMutant','GetFileAttributesExW','NtOpenKey','OpenSCManagerW','FindResourceW','GetFileVersionInfoW','NtOpenKeyEx','InternetCrackUrlA','FindResourceA','files_created','files_deleted','files_written','directory_created','regkey_opened','resolved_hosts','dll_loaded','virus_total','no_of_udp','no_of_tcp','no_of_hosts','no_of_http','no_of_icmp','no_of_stmp','no_of_domains']
    list10 = []
    list6 = []
    let = {'no_of_dns':0,'sensapi.dll':0,'cfgmgr32.dll':0,'msftedit.dll':0,'msls31.dll':0,'dwmapi.dll':0,'odbcint.dll':0,'cryptsp.dll':0,'mpr.dll':0,'crypt32.dll':0,'advapi32.dll':0,'ole32.dll':0,'ws2_32.dll':0,'system.dll':0,'mlang.dll':0,'feclient.dll':0,'setupapi.dll':0,'iphlpapi.dll':0,'mswsock.dll':0,'avicap32.dll':0,'api-ms-win-service-winsvc-l1-1-0.dll':0,'rpcrt4.dll':0,'ieui.dll':0,'urlmon.dll':0,'winmm.dll':0,'rpcrtremote.dll':0,'apphelp.dll':0,'dnsapi.dll':0,'kernel32.dll':0,'oleaut32.dll':0,'netapi32.dll':0,'rstrtmgr.dll':0,'ntdll.dll':0,'findprocdll.dll':0,'dhcpcsvc6.dll':0,'cryptbase.dll':0,'version.dll':0,'comdlg32.dll':0,'rtutils.dll':0,'bcryptprimitives.dll':0,'napinsp.dll':0,'shell32.dll':0,'uxtheme.dll':0,'odbc32.dll':0,'oleacc.dll':0,'rasman.dll':0,'comctl32.dll':0,'winrnr.dll':0,'riched20.dll':0,'nlaapi.dll':0,'accesscontrol.dll':0,'api-ms-win-core-localregistry-l1-1-0.dll':0,'rasapi32.dll':0,'user32.dll':0,'api-ms-win-security-sddl-l1-1-0.dll':0,'profapi.dll':0,'api-ms-win-service-management-l1-1-0.dll':0,'gdi32.dll':0,'msvcrt.dll':0,'shlwapi.dll':0,'msimg32.dll':0,'ieframe.dll':0,'psapi.dll':0,'propsys.dll':0,'sspicli.dll':0,'msvbvm60.dll':0,'credssp.dll':0,'ntdll':0,'olepro32.dll':0,'inetmib1.dll':0,'secur32.dll':0,'wsock32.dll':0,'netutils.dll':0,'clbcatq.dll':0,'msvcp60.dll':0,'msi.dll':0,'dhcpcsvc.dll':0,'userenv.dll':0,'dbghelp.dll':0,'gdiplus.dll':0,'xmllite.dll':0,'pnrpnsp.dll':0,'winhttp.dll':0,'ntmarta.dll':0,'cryptnet.dll':0,'rasadhlp.dll':0,'icmp.dll':0,'imm32.dll':0,'ehstorshell.dll':0,'vb6chs.dll':0,'wintrust.dll':0,'api-ms-win-security-lsalookup-l1-1-0.dll':0,'riched32.dll':0,'wininet.dll':0,'windowscodecs.dll':0,'shfolder.dll':0,'comres.dll':0,'sxs.dll':0,'snmpapi.dll':0,'cscui.dll':0,'ntshrui.dll':0,'NtOpenSection':0,'GetVolumePathNameW':0,'GetForegroundWindow':0,'NtSetValueKey':0,'getaddrinfo':0,'MessageBoxTimeoutW':0,'SetFileTime':0,'GetFileVersionInfoSizeW':0,'MessageBoxTimeoutA':0,'GetFileAttributesW':0,'GetVolumePathNamesForVolumeNameW':0,'RegEnumKeyExA':0,'RegOpenKeyExW':0,'NtDelayExecution':0,'SetErrorMode':0,'RegOpenKeyExA':0,'GetCursorPos':0,'FindResourceExA':0,'SetFilePointerEx':0,'GetUserNameW':0,'RegEnumValueW':0,'GetUserNameA':0,'FindResourceExW':0,'GetTimeZoneInformation':0,'NtCreateFile':0,'GetSystemTimeAsFileTime':0,'GlobalMemoryStatusEx':0,'CoInitializeEx':0,'LoadResource':0,'CoInitializeSecurity':0,'SetFileAttributesW':0,'NtQueryInformationFile':0,'RegSetValueExW':0,'RegCreateKeyExW':0,'DeviceIoControl':0,'NtQueryKey':0,'OpenServiceA':0,'RegQueryValueExA':0,'EnumWindows':0,'OpenServiceW':0,'GetAdaptersAddresses':0,'IsDebuggerPresent':0,'NtQueryValueKey':0,'RegCreateKeyExA':0,'RegQueryValueExW':0,'CreateActCtxW':0,'NtDeviceIoControlFile':0,'NtReadFile':0,'NtWriteFile':0,'LdrGetDllHandle':0,'NtQuerySystemInformation':0,'NtEnumerateValueKey':0,'LoadStringA':0,'CreateThread':0,'GetSystemDirectoryW':0,'SetUnhandledExceptionFilter':0,'GetVolumeNameForVolumeMountPointW':0,'GetSystemDirectoryA':0,'NtProtectVirtualMemory':0,'SHGetFolderPathW':0,'RegDeleteValueW':0,'GlobalMemoryStatus':0,'SearchPathW':0,'WriteConsoleA':0,'LoadStringW':0,'LdrGetProcedureAddress':0,'NtOpenThread':0,'RegSetValueExA':0,'GetDiskFreeSpaceExW':0,'NtOpenDirectoryObject':0,'SetEndOfFile':0,'LdrLoadDll':0,'UuidCreate':0,'WriteConsoleW':0,'CreateToolhelp32Snapshot':0,'CoUninitialize':0,'RegCloseKey':0,'LdrUnloadDll':0,'NtSetInformationFile':0,'WSAStartup':0,'NtTerminateProcess':0,'SendNotifyMessageW':0,'GetSystemMetrics':0,'NtCreateThreadEx':0,'GetFileSize':0,'NtDuplicateObject':0,'NtAllocateVirtualMemory':0,'ReadProcessMemory':0,'CreateDirectoryW':0,'DeleteFileW':0,'NtResumeThread':0,'GetFileSizeEx':0,'CoCreateInstance':0,'RegEnumKeyExW':0,'CryptAcquireContextW':0,'GetComputerNameA':0,'FindFirstFileExW':0,'GetFileInformationByHandleEx':0,'GetTempPathW':0,'SetWindowsHookExA':0,'NtOpenMutant':0,'InternetOpenA':0,'SetWindowsHookExW':0,'CopyFileA':0,'GetFileType':0,'CreateProcessInternalW':0,'GetNativeSystemInfo':0,'NtQueryFullAttributesFile':0,'DrawTextExW':0,'GetSystemInfo':0,'FindWindowW':0,'GetSystemWindowsDirectoryW':0,'NtClose':0,'NtOpenProcess':0,'NtCreateSection':0,'NtFreeVirtualMemory':0,'OpenSCManagerA':0,'SizeofResource':0,'UnhookWindowsHookEx':0,'RegEnumKeyW':0,'NtMapViewOfSection':0,'GetKeyState':0,'OleInitialize':0,'NtOpenFile':0,'RegQueryInfoKeyW':0,'SetFilePointer':0,'NtUnmapViewOfSection':0,'NtQueryDirectoryFile':0,'gethostbyname':0,'__exception__':0,'NtQueryAttributesFile':0,'NtCreateMutant':0,'GetFileAttributesExW':0,'NtOpenKey':0,'OpenSCManagerW':0,'FindResourceW':0,'GetFileVersionInfoW':0,'NtOpenKeyEx':0,'InternetCrackUrlA':0,'FindResourceA':0,'files_created':0,'files_deleted':0,'files_written':0,'directory_created':0,'regkey_opened':0,'resolved_hosts':0,'dll_loaded':0,'virus_total':0,'no_of_udp':0,'no_of_tcp':0,'no_of_hosts':0,'no_of_http':0,'no_of_icmp':0,'no_of_stmp':0,'no_of_domains':0}
    with open(os.path.join(dirName,ap)) as fd:
        data = json.load(fd)
        if 'behavior' in data:
            if 'summary' in data["behavior"]:
                if 'dll_loaded' in data["behavior"]["summary"]:
                    load = data["behavior"]["summary"]["dll_loaded"]
                    for k in load:
                        k = k.split("\\")
                        k = k[-1].split("/")
                        k = k[-1].lower()
                        if 'dll' in k:
                            if k in let.keys():
                                let.update({k:1})
        if 'behavior' in data:                    
            if 'apistats' in data["behavior"]:
                load = data["behavior"]["apistats"]
                for k in load:
                    j = data["behavior"]["apistats"][k]
                    for i in j:
                        if i in let.keys():
                            let.update({i:1})

        if 'behavior' in data:                
            if 'summary' in data["behavior"]:
                if 'file_created' in data["behavior"]["summary"]: 
                    load = data["behavior"]["summary"]["file_created"]
                    k = len(load)
                    if 'files_created' in let.keys():
                        let.update({'files_created':k})

        if 'behavior' in data:            
            if 'summary' in data["behavior"]:
                if 'file_deleted' in data["behavior"]["summary"]: 
                    load = data["behavior"]["summary"]["file_deleted"]
                    k = len(load)
                    if 'files_deleted' in let.keys():
                        let.update({'files_deleted':k}) 



        if 'behavior' in data:                
            if 'summary' in data["behavior"]:
                if 'file_written' in data["behavior"]["summary"]: 
                    load = data["behavior"]["summary"]["file_written"]
                    k = len(load)
                    if 'files_written' in let.keys():
                        let.update({'files_written':k})             
        if 'behavior' in data:
            if 'summary' in data["behavior"]:
                if 'directory_created' in data["behavior"]["summary"]: 
                    load = data["behavior"]["summary"]["directory_created"]
                    k = len(load)
                    if 'directory_created' in let.keys():
                        let.update({'directory_created':k})  
        if 'behavior' in data:
            if 'summary' in data["behavior"]:
                if 'regkey_opened' in data["behavior"]["summary"]: 
                    load = data["behavior"]["summary"]["regkey_opened"]
                    k = len(load)
                    if 'regkey_opened' in let.keys():
                        let.update({'regkey_opened':k})
        if 'behavior' in data:                
            if 'summary' in data["behavior"]:
                if 'dll_loaded' in data["behavior"]["summary"]: 
                    load = data["behavior"]["summary"]["dll_loaded"]
                    k = len(load)
                    if 'dlls_loaded' in let.keys():
                        let.update({'dlls_loaded':k})
        if 'behavior' in data:                
            if 'summary' in data["behavior"]:
                if 'resolves_host' in data["behavior"]["summary"]: 
                    load = data["behavior"]["summary"]["resolves_host"]
                    k = len(load)
                    if 'resolved_hosts' in let.keys():
                        let.update({'resolved_hosts':k})
        if 'virustotal' in data:
            if 'positives' in data["virustotal"]:
                load = data["virustotal"]["positives"]
                if 'virus_total' in let.keys():
                    let.update({'virus_total':load})
        if 'network' in data:
            if 'udp' in data["network"]:
                k = len(data["network"]["udp"])
                if 'no_of_udp' in let.keys():
                    let.update({'no_of_udp':k})

        if 'network' in data:
            if 'tcp' in data["network"]:
                k = len(data["network"]["tcp"])
                #print entry
                #print k
                if 'no_of_tcp' in let.keys():
                    let.update({'no_of_tcp':k})
        if 'network' in data:
            if 'hosts' in data["network"]:
                k = len(data["network"]["hosts"])
                #print entry
                #print k
                if 'no_of_hosts' in let.keys():
                    let.update({'no_of_hosts':k})

        if 'network' in data:
            if 'http' in data["network"]:
                k = len(data["network"]["http"])
                if 'no_of_http' in let.keys():
                    let.update({'no_of_http':k})

        if 'network' in data:
            if 'icmp' in data["network"]:
                k = len(data["network"]["icmp"])
                if 'no_of_icmp' in let.keys():
                    let.update({'no_of_icmp':k})

        if 'network' in data:
            if 'smtp' in data["network"]:
                k = len(data["network"]["smtp"])
                if 'no_of_smtp' in let.keys():
                    let.update({'no_of_smtp':k})

        if 'network' in data:
            if 'domains' in data["network"]:
                k = len(data["network"]["domains"])
                if 'no_of_domains' in let.keys():
                    let.update({'no_of_domains':k})


        if 'network' in data:
            if 'dns' in data["network"]:
                k = len(data["network"]["dns"])
                if 'no_of_dns' in let.keys():
                    let.update({'no_of_dns':k})                


                
    v =0
    for i in list9:
        t = let.get(i)
        list10.insert(v,t)
        v = v +1
    list6.append(list10)
    P = np.array(list6)
    X = np.array(P[:,0:256])
    filename = 'sharaddynamic.sav'
    loaded_model = pickle.load(open(filename, 'rb'))
    rf_predictions = loaded_model.predict(X)
    return rf_predictions
    
    
    
                
str =""
str = raw_input("Enter the path: ");
dirName = str;
entries = os.listdir(str)
with open('dynamic.csv', 'a+') as csvfile:
    filewriter = csv.writer(csvfile, delimiter=',',quotechar='|', quoting=csv.QUOTE_MINIMAL)
    filewriter.writerow(['File_Hash', 'Predicted Label'])
    
for entry in entries:
    f = fun1(dirName,entry)
    if f == 0:
        ram = 'B'
    if f == 1:
        ram = 'M'
    g = entry
    shyam = g.split(".")    
    with open('dynamic.csv', 'a+') as csvfile:
        filewriter = csv.writer(csvfile, delimiter=',',quotechar='|', quoting=csv.QUOTE_MINIMAL)
        filewriter.writerow([shyam[0], ram])    


# In[ ]:




